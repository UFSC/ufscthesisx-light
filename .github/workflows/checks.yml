name: Checks

on: [push, pull_request]

# For a more complex build matrix example see:
# https://github.com/evandroforks/anki/blob/master/.github/workflows/checks.yml
jobs:

  test:
    name: Tests on ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [ ubuntu-latest, macos-latest, windows-latest ]
        os: [ ubuntu-latest ]

      # Keep all systems running if something fails
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Configure OS environment variables
        id: environment_variables
        run: |
          set -x
          RELEASE_NAME="1.0.${{ github.run_number }}.zip"
          RELEASE_FILE="ufscthesisx-light.zip"
          RELEASE_TAG="latest-version"

          echo "::set-output name=RELEASE_TAG::${RELEASE_TAG}"
          echo "::set-output name=RELEASE_NAME::${RELEASE_NAME}"
          echo "::set-output name=RELEASE_FILE::${RELEASE_FILE}"

          if curl --output /dev/null --silent --head --fail https://github.com/${GITHUB_REPOSITORY}/releases/${RELEASE_TAG};
          then :
            echo "::set-output name=RELEASE_FILE_EXISTS::true";
          else
            echo "::set-output name=RELEASE_FILE_EXISTS::false";
          fi
          touch ${RELEASE_NAME}

      # - name: Create release
      #   if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      #   uses: xu-cheng/texlive-action/full@v1
      #   with:
      #     run: |
      #       set -x
      #       apk add make unzip zip python3

      #       make release version="${{ steps.environment_variables.outputs.RELEASE_NAME }}"
      #       unzip "${{ steps.environment_variables.outputs.RELEASE_NAME }}"

      #       cd workspace
      #       make debug=1 halt=1

      # https://stackoverflow.com/questions/61495123/completely-delete-release-with-github-api
      - name: Delete Last Release Asset
        if: steps.environment_variables.outputs.RELEASE_FILE_EXISTS == 'true'
        run: |
          curl --cookie-jar -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" --request DELETE "https://github.com/${GITHUB_REPOSITORY}/releases/${{ steps.environment_variables.outputs.RELEASE_TAG }}"

      # https://github.com/actions/create-release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.environment_variables.outputs.RELEASE_TAG }}
          release_name: Latest Version
          body: |
            Contém as alterações mais recentes na ramificação principal deste projeto.
          draft: false
          prerelease: false

      # https://github.com/actions/upload-release-asset
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.environment_variables.outputs.RELEASE_NAME }}
          asset_name: ${{ steps.environment_variables.outputs.RELEASE_FILE }}
          asset_content_type: application/zip
